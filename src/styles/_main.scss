@use 'sass:map';
@import 'variables';

@mixin typography($theme) {
  // Get the typography config from the theme.
  $typography-config: mat.get-typography-config($theme);

  .my-carousel {
    font-family: mat.font-family($typography-config);
  }
}

@mixin color($theme) {
  // Get the color config from the theme.
  $color-config: mat.get-color-config($theme);

  // Get the primary color palette from the color-config.
  $primary-palette: map.get($color-config, 'primary');

  // Get the secondary color palette from the color-config.
  $secondary-palette: map.get($color-config, 'accent');

  $background: map.get($color-config, background);
  $foreground: map.get($color-config, foreground);

  .mat-radio-outer-circle {
    border-color: mat.get-color-from-palette($secondary-palette, 400);
  }
  
  .admin-menu {
    background: mat.get-color-from-palette($background, dialog);
    border-bottom: 1px solid mat.get-color-from-palette($foreground, divider);
  }
  .right {
    background: mat.get-color-from-palette($background, dialog);
    border: none;
    &.opened {
      border-left: 1px solid mat.get-color-from-palette($foreground, divider);
    }
  }
  .tile-color {
    background: mat.get-color-from-palette($secondary-palette, 100);
    color: #000;
    border: 1px solid mat.get-color-from-palette($primary-palette, 500);
  }
  .icon-text {
    position: absolute;
    right: 17px;
    color: mat.get-color-from-palette($secondary-palette, 100);
    font-size: 10px;
    bottom: 2px;
    font-weight: 700;
    &.big-trash {
      color: mat.get-color-from-palette($background, dialog);
    }
    &.down {
      bottom: -3px;
    }
    &.large {
      font-size: 12px;
    }
  }
  .mat-slide-toggle {
    .mat-slide-toggle-bar{
      background: rgba(0, 0, 0, 0.38);
    }
    &.mat-checked{
        .mat-slide-toggle-bar{
          background: mat.get-color-from-palette($primary-palette, 300);
        }
    }
    .mat-slide-toggle-thumb {
      background: #ccc;
    }
    &.mat-checked {
      .mat-slide-toggle-thumb {
        background: #fafafa;
        border: 1px solid mat.get-color-from-palette($primary-palette, 500);
      }
    }
  }

  .angular-editor-wrapper{
    background: #fff;
    min-height: 400px;
    border: 1px solid mat.get-color-from-palette($primary-palette, 500) !important;
    border-bottom-left-radius: 8px;
    border-bottom-right-radius: 8px;
    padding: 5px;
    overflow: hidden;
    iframe {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }
  .angular-editor-toolbar {
    background: mat.get-color-from-palette($primary-palette, A100) !important;
    border-color: mat.get-color-from-palette($primary-palette, 500) !important;
    padding: 11px;
    border-top-left-radius: 8px;
    border-top-right-radius: 8px;
    border-bottom: none !important;
  }
}

@mixin theme($theme) {
  $config: mat.get-color-config($theme);
  @if $config != null {
    @include color($theme);
  }
  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null {
    @include typography($theme);
  }
}

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: 'Roboto', sans-serif;
}

.header {
  justify-content: space-between;
}

.mat-sidenav-container {
  height: 100%;
  display: flex;
  flex: 1 1 auto;
}

.nav-tool-items {
  display: inline-block;
  margin-right: 13px;
}

.mat-sidenav,
.mat-sidenav-content {
  //padding: 15px;
}

.mat-list-item.active {
  background: rgba(0, 0, 0, .04);
}

.mat-sidenav-content {
  //padding: 25px 40px 0;
}
.mat-sidenav {
  background-color: #F2F2F2;
  width: var(--sidenav_width);
}
.drag-in-list{
  position: absolute;
  right: 15px;
  cursor: pointer;
}
.card-description {
    position: absolute;
}
.header {
  position: sticky;
  position: -webkit-sticky;
  top: 0;
  z-index: 1000;
}

mat-sidenav mat-icon {
  margin-right: 12px;
}

.hamburger {
  margin-top: 5px;
  cursor: pointer;
}

.mat-radio-button,
.mat-radio-group {
  margin-right: 25px;
}

.controlers-wrapper>* {
  width: 100%;
  padding: 0;
}

.misc-bottom-padding {
  margin: 8px 0 10px;
}

.misc-bottom-padding mat-label {
  margin-right: 15px;
}

mat-radio-group mat-radio-button {
  margin-left: 5px;
}

.button-wrapper button {
  margin-right: 5px;
}

table.mat-table,
table {
  width: 100%;
}

body .mat-list-item {
  margin-bottom: 10px;
}

.inner-wrapper {
  padding: 15px 0 130px;
  width: 100%;
}

.inner-wrapper mat-card {
  display: inline-block;
  margin: 0 6% 0 0;
  vertical-align: top;
  width: 44%;
}

.full-wrapper {
  width: 100%;
}

.multiple-items {
  position: relative;
}

.multiple-items .tooltip-info {
  right: 0;
  top: 7px;
  cursor: pointer;
  color: #a1a7c7;
  position: absolute;
  font-size: 20px;
}

body .push-right {
  margin-right: 10px;
}

.no-data {
  text-align: center;
  padding-top: 30px;
  color: #6c75a9;
}

.button-wrapper {
  margin: 20px 0 0 0;
}

.example-card {
  max-width: 400px;
}

.example-header-image {
  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');
  background-size: cover;
}

.title-group {
  margin-bottom: 25px;
}

.card-deck-container {
  width: 100%;
  max-width: 1200px;
  position: relative;
  border-radius: 2px;
  padding: 10px 10px 30px;
  margin: 10px 10px 10px 10px;
  background-color: #f5f5f5;
}

.card-item {
  padding: 3px 3px 3px 3px;
}

mat-error{
  color: #f44336 !important;
}

mat-grid-tile {
  border-radius: 5px;
  background: var(--background-dialog);
  border: 1px solid var(--border);
  //box-shadow: -15px 13px 43px 0px rgb(19 34 57 / 27%);
  //box-shadow: 5px -5px 5px 0px var(--background-shadow);
  .mat-grid-tile-content {
    margin-top: 10px;
    display: flow-root;
  }
}

.my-alternate-theme button {
  margin-right: 10px;
}

@media (max-width:1024px) {
  .inner-wrapper mat-card {
    width: 100%;
  }

  .mat-sidenav-content {
    padding: 20px 20px 0;
  }

  .misc-bottom-padding mat-label {
    display: block;
    padding-bottom: 10px;
  }

  .mat-sidenav {
    width: 230px;
  }
}

@media (max-width:767px) {
  .nav-tool-items {
    margin-right: 0;
  }
  .hamburger {
    visibility: visible !important;
  }
}


